<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 唐继璇的博客</title>
    <link>http://tangjixuan.top/posts/</link>
    <description>Recent content in Posts on 唐继璇的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Jun 2022 15:14:17 +0800</lastBuildDate>
    
	<atom:link href="http://tangjixuan.top/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Js对象的基本用法</title>
      <link>http://tangjixuan.top/2022/js%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 16 Jun 2022 15:14:17 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2022/js%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>《JS 对象基本用法》  声明对象的两种语法  let obj = { &#39;name&#39;: &#39;tang&#39;, &#39;age&#39;: 18 } let obj = new Object({&#39;name&#39;: &#39;tang&#39;}) 如何删除对象的属性  delete obj.xxx delete obj[&#39;xxx&#39;]  验证对象是否存在属性&amp;rsquo;xxx&amp;rsquo;,若显示false则不存在  &#39;xxx&#39; in obj === false  对象含有属性名，但是属性值为undefined的情况  &amp;lsquo;xxx&amp;rsquo; in obj &amp;amp;&amp;amp; obj.xxx ===undefined
 注意obj.xxx===undefined不能判断&amp;rsquo;xxx&amp;rsquo;是否为obj的属性  如何查看对象的属性  obj.xxx obj[&#39;xxx&#39;] 查看对象的所有属性名
Object.keys(obj) 查看对象的所有属性值
Object.values(obj) 查看对象的属性
console.dir(obj) Object.entries(obj) 如何修改或增加对象的属性  已有属性则改，没有属性则增。
 修改或者增加对象的自身属性  obj.name = &#39;tang&#39; obj[&#39;name&#39;] = &#39;tang&#39; 或者</description>
    </item>
    
    <item>
      <title>JS 的基本语法</title>
      <link>http://tangjixuan.top/2021/eighth/</link>
      <pubDate>Mon, 14 Jun 2021 00:10:46 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2021/eighth/</guid>
      <description>JS 的基本语法  什么是表达式和语句  表达式例如1+2，console.log(3)
语句例如 var a = 1
两者区别是
表达式一般都有值，语句可能有值可能没有值
语句一般会改变环境(声明、赋值)
标识符的规则  第一个字符，可以是Unicode字母或_或中文
第一个字符后面的字符，除了Unicode字母或_或中文，还可以是数字
例如
var _ = 1 var _____ = 6 var $ = 2 var 你好 = &#39;hi&#39; var $1 = 3 if else 语句  语法
if(表达式){语句1}else{语句2}
{}在语句只有一句的时候可以省略，但不建议这样做。
最推荐的写法
if(表达式){ 语句 }else if(表达式){ 语句 }else{ 语句 } while for 语句  while语句
语法
while(表达式){语句}
当表达式为真，执行语句，执行完再判断表达式的真假。
当表达式为假，执行后面的语句。
for语句
for语句是while语句的方便写法。
for(语句1;表达式2;语句3){ 循环体 }
先执行语句1，然后判断表达式真假，若为真则执行循环体，然后执行语句3；若为假则直接退出循环执行后面的语句。</description>
    </item>
    
    <item>
      <title>《JavaScript 的诞生》</title>
      <link>http://tangjixuan.top/2021/seventh/</link>
      <pubDate>Sat, 06 Feb 2021 14:15:09 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2021/seventh/</guid>
      <description>JavaScript的历史  起始于网景公司.  JavaScript在1995年由Netscape公司的Brendan Eich，在网景导航者浏览器上首次设计实现而成. 网景公司急需一种网页脚本语言，使得浏览器可以与网页互动。网景决定发明一种与Java搭配使用的辅助脚本语言并且语法上有些类似.艾克在1995年5月仅花了十天时间就把原型设计出来了.
Javascript语言实际上是两种语言风格的混合产物&amp;mdash;-（简化的）函数式编程+（简化的）面向对象编程。
微软采纳.  微软对网景的导航解释器进行了逆向工程，创建了JScript，以与处于市场领导地位的网景产品同台竞争。JScript也是一种JavaScript实现，这两个JavaScript语言版本在浏览器端共存意味着语言标准化的缺失，发展初期，JavaScript的标准并未确定，同期有网景的JavaScript，微软的JScript双峰并峙。
标准化  1996年11月，网景正式向ECMA（欧洲计算机制造商协会）提交语言标准。1997年6月，ECMA以JavaScript语言为基础制定了ECMAScript标准规范ECMA-262。JavaScript成为了ECMAScript最著名的实现之一
Javascript的10个设计缺陷  不适合开发大型程序 非常小的标准库 null和undefined,两者非常容易混淆，但是含义完全不同。 全局变量难以控制 自动插入行尾分号  Javascript的所有语句，都必须以分号结尾。但是，如果你忘记加分号，解释器并不报错，而是为你自动加上分号。有时候，这会导致一些难以发现的错误。
加号运算符  +号作为运算符，有两个含义，可以表示数字与数字的和，也可以表示字符与字符的连接。
这样的设计，不必要地加剧了运算的复杂性，完全可以另行设置一个字符连接的运算符。
NaN 数组和对象的区分  由于Javascript的数组也属于对象（object），所以要区分一个对象到底是不是数组，相当麻烦。
== 和 ===  推荐任何时候都使用&amp;quot;===&amp;rdquo;（精确判断）比较符。
基本类型的包装对象  Javascript有三种基本数据类型：字符串、数字和布尔值。它们都有相应的建构函数，可以生成字符串对象、数字对象和布尔值对象。
与基本数据类型对应的对象类型，作用很小，造成的混淆却很大。</description>
    </item>
    
    <item>
      <title>浅析URL</title>
      <link>http://tangjixuan.top/2021/sixth/</link>
      <pubDate>Thu, 04 Feb 2021 10:24:00 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2021/sixth/</guid>
      <description>1. URL 包含哪几部分，每部分分别有什么作用 URL包含协议、域名或IP、端口号、路径、查询字符串、锚点。
举个例子
https://www.baidu.com:443/s?wd=hello&amp;amp;rsv_spt=1#6   https是协议，他表明浏览器必须使用什么协议。
  www.baidu.com是域名。他表明浏览器正在请求哪个Web服务器。除了使用域名，也可以直接使用IP地址
  :443是端口。它表示用于访问Web服务器上的不同资源的入口。如果Web服务器使用HTTP协议的标准端口（HTTP为80，HTTPS为443）来授予其资源的访问权限，则通常会被忽略。否则是强制性的。
  /s是web服务器上资源的路径。不同路径可以访问同一域名下不同网页
  ?wd=hello&amp;amp;rsv_spt=1是提供给网络服务器的查询字符串。
  #6是资源本身的另一部分的锚点. 锚点表示资源中的一种“书签”，给浏览器显示位于该“加书签”位置的内容的方向。
  2. DNS 的作用是什么，nslookup 命令怎么用 DNS的作用是把域名和端口对应起来。
可使用nslookup命令查询到域名对应IP地址
nslookup example.com 3. IP 的作用是什么，ping 命令怎么用 IP地址是分配给连接到使用Internet协议的网络的每个设备的一串数字。 相对应,浏览器可以向电信DNS服务器询问example.comm域名对应的IP地址,向IP地址对应的设备,发出访问资源的请求.
例如可以使用ping命令找到当前域名访问的IP地址
ping example.com 4. 域名是什么，分别哪几类域名 域名就是对IP的别称,个人认为就像中英文互相翻译,域名和IP的关系也是如此,一个域名可以对应多个Ip,多个域名也可以共享一个IP主机设备.
 顶级域名  .com 公司类
.org 组织类
.net 互联网类
.gov 政府机构
.edu 教育机构
顶级域名可以告诉用户域名所提供的服务类型。
  example.com是二级域名
  wwww.example.com是三级域名,与二级域名是父子关系.
  </description>
    </item>
    
    <item>
      <title>《css知识总结》</title>
      <link>http://tangjixuan.top/2021/fifth/</link>
      <pubDate>Wed, 03 Feb 2021 00:38:16 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2021/fifth/</guid>
      <description> 浏览器渲染原理   根据HTML构建HTML树(DOM) 根据CSS构建CSS树(CSSDOM) 将两棵树合并成一颗渲染树(render tree) Layout布局(文档流、盒模型、计算大小和位置) Paint绘制(边框颜色、文字颜色、阴影) Compose合成(根据层叠关系展示画面)    CSS 动画的两种做法   一种做法：使用两次transform  a选择器通过transform到b选择器， b选择器通过transform到c选择器
或者使用keyframes
@keyframes example-one{ from{ transfrom:translateX(0%); } to{ transform:translateX(100%); } } @keyframes example-two{ 0%{top:0;left:0;} 50%{top:50px;} 68%,72%{left:50px;} 100%{top:100px;left:100%; } 另一种做法：使用animation  缩写语法：
animation:时长|过渡方式|延迟时间|次数|方向|填充模式|是否暂停|动画名；
时长：1s或者1000ms
过渡方式：跟transition取值一样,如linear
次数：数字或者infinite
方向：reverse|alternate|alternate-reverse
填充模式：none|forwards|backwards|both
是否暂停：paused|running
例如 动画名为example
animation: .5s linear 1s 10 alternate forwards example; </description>
    </item>
    
    <item>
      <title>《HTML常用标签》</title>
      <link>http://tangjixuan.top/2020/forth/</link>
      <pubDate>Mon, 03 Aug 2020 20:06:12 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2020/forth/</guid>
      <description>1、a标签的用法  href属性，超文本引用。  &amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;超文本链接&amp;lt;/a&amp;gt; 备注：href的值可以是
网址
https://google.com
http://google.com
//google.com
路径
/a/b/c以及a/b/c
（这里的/不是硬盘的根目录，而是http服务开启的根目录，在哪里开启的hs,哪里就是根目录）
index.html以及./index.html
伪协议
javascript:代码;
mailto:邮箱
tel:手机号
ID
#xxx
&amp;lt;a href=&amp;quot;javascript:alert(1);&amp;quot;&amp;gt;javascript伪协议&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;空的伪协议&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;mailto:tangallison2@gmail.com&amp;quot;&amp;gt;发邮件给我&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;tel:(+86)18905509953&amp;quot;&amp;gt;打电话给我&amp;lt;/a&amp;gt;  target属性，作用是指在哪一个窗口打开超链接。  &amp;lt;a href=&amp;quot;输入网址&amp;quot; target=&amp;quot;_blank或者_self或者_top或者_parent&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; 备注：target的不同值的不同意义
_blank,在新页面中打开
_self,在当前页面打开,self是默认值
_top,在顶级窗口打开，当前页面iframe最上面的窗口打开
_parent,在当前链接所在iframe的上一层打开
xxx,如果有一个窗口叫xxx,就打开它，如果没有，就创建一个叫xxx的窗口，在新页面打开它。
（在开发者工具console中输入window.name后回车可验证）
（当iframe的名字和target的名字相同时，点击超链接可在对应iframe里面打开页面）
&amp;lt;a href=&amp;quot;//google.com&amp;quot; target=&amp;quot;xxx&amp;quot;&amp;gt;google&amp;lt;/a&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;iframe src=&amp;quot;&amp;quot; name=&amp;quot;xxx&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt; 2、img标签的用法  属性  alt,当图片加载失败，就会显示alt的值。
src,来源，值是图片的地址。
height,高度，值是数字。
width,宽度，值是数字。
注意： 只写宽度，高度会自适应。
只写高度，宽度会自适应。
永远不要让图片变形。
&amp;lt;img width=&amp;quot;400&amp;quot; src=&amp;quot;dog.png&amp;quot; alt=&amp;quot;一只狗&amp;quot;&amp;gt;  onload/onerror 监听图片是否加载成功  &amp;lt;body&amp;gt; &amp;lt;script&amp;gt; xxx.</description>
    </item>
    
    <item>
      <title>《HTML入门笔记1》</title>
      <link>http://tangjixuan.top/2020/third/</link>
      <pubDate>Sun, 14 Jun 2020 15:48:31 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2020/third/</guid>
      <description>1. HTML 到底是谁发明的？  Tim Berners-Lee（李爵士）,他发明了 HTML、WWW、HTTP 和 URL，用自己写的浏览器访问了自己写的服务器。  2. HTML 起手应该写什么？ &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;zh-CN&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 3. 常用的表章节的标签有哪些，分别是什么意思?  标题 h1~h6 章节 section 文章 article 段落 p 头部 header 脚部 footer 主要内容 main 旁支内容 aside 划分 div  4. 全局属性有哪些? class contenteditable
hidden id style tabindex title
5. 常用的内容标签有哪些，分别是什么意思（a、strong、em、code、pre 等等）?  ol+li (ordered list + list item 有顺序的列表+列表中的一项）  &amp;lt;p&amp;gt;每天要做的事情&amp;lt;/p&amp;gt; &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt;吃饭&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;睡觉&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;玩游戏&amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt;   ul+li (unordered list +list item 无顺序的列表+列表中的一项)</description>
    </item>
    
    <item>
      <title>草稿</title>
      <link>http://tangjixuan.top/2020/second/</link>
      <pubDate>Sun, 19 Apr 2020 22:52:38 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2020/second/</guid>
      <description>你叫啥</description>
    </item>
    
    <item>
      <title>如何用hugo搭建一个博客</title>
      <link>http://tangjixuan.top/2020/first/</link>
      <pubDate>Sun, 19 Apr 2020 22:45:52 +0800</pubDate>
      
      <guid>http://tangjixuan.top/2020/first/</guid>
      <description>在已有github账户和已安装Cmder和VSCODE的情况下，使用hugo搭建一个博客 当然如果没有注册github账户和未安装Cmder和VSCODE软件，可以先去安装啊
 首先安装hugo   点它hugo安装包链接 选择适合你的版本号安装，例如windows用户可选hugo_XXXXX_Windows-64bit.zip 安装后，可在Cmder软件中输入  hugo version 如果显示出版本信息，则安装成功。
Google里面搜索hugo,进入hugo官网   点击quickstart,png  先在Cmder进入你放文件的目录，从Step 2开始一步一步更着官网的代码在Cmder上输入,下面的XXXX你可以替换成你的github用户名。  step2
hugo new site XXXX.github.io-creator 在之后建立的github远程仓库命名必须为：XXXX.github.io,不用深究，后面会说到。
step3 建立XXXX.github.io-creator目录的本地仓库，并下载一个博客主题
cd XXXX.github.io-creator git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml step4
hugo new posts/my-first-post.md 这步之后生成一个my-first-post.md的博客，用VSCODE打开后修改内容
draft:false 可以在博客里面写一些内容
step5
hugo server -D 效果是启动hugo服务器，ctrl+点击http://localhost:1313/，就能查看my-first-post.md内容。
step6 用VSCODE打开XXXX.github.io-creator，找到并打开文件config.toml，用更私人的标题替代下面的对应代码。
baseURL = &amp;quot;http://tangjixuan.top/&amp;quot; languageCode = &amp;quot;en-us&amp;quot; title = &amp;quot;My New Hugo Site&amp;quot; theme = &amp;quot;ananke&amp;quot; step7 在Cmder中输入</description>
    </item>
    
  </channel>
</rss>